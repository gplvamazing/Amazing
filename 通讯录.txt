//contast.h头文件模块
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
struct phone
{
	//一个人的信息
	char name[10];
	char sex[10];
	int age;
	char tele[12];//电话
	char addr[20];//住址
};
//通讯录构成
struct contact
{
	struct phone *s1;//指向一块空间
	int size;//记录当前已有的信息	
	int phonemax;//当前通讯录容量 当max==size时扩容
};
//声明函数
void Initcontact(struct contact* ps);
void addcontact(struct contact* ps);
void showcontact(const struct contact* ps);
void delcontact(struct contact* ps);
void searchcontact(const struct contact* ps);
void modifycontact(struct contact* ps);
void destroy_memory(struct const* ps);

//contast.c模块
#include "contast.h"
void Initcontact(struct contact* ps)//开辟空间、初始化
{
	ps->s1 =(struct phone*) malloc(3 * sizeof(struct phone));
	if (ps->s1 == NULL)
		return;
	ps->size = 0;
	ps->phonemax = 3;//初始3个结构体内存
}
void memory_ptr(struct contact* ps)
{
	if (ps->size == ps->phonemax)
	{   //增容
		struct phone*ptr = (struct phone*)realloc(ps->s1, (ps->phonemax + 2) * sizeof(struct phone));
		if (ptr != NULL)
		{
			ps->s1 = ptr;
			ps->phonemax += 2;
			printf("增容成功\n");
		}
		else
			printf("增容失败\n");
	}
}
void addcontact(struct contact* ps)
{
	memory_ptr(ps);//检测当前通讯录容量
	//增加对象
		printf("请输入姓名：");
		scanf("%s",ps->s1[ps->size].name);
		printf("请输入姓别：");
		scanf("%s", ps->s1[ps->size].sex);
		printf("请输入年龄：");
		scanf("%d", &ps->s1[ps->size].age);
		printf("请输入电话：");
		scanf("%s", ps->s1[ps->size].tele);
		printf("请输入地址：");
		scanf("%s", ps->s1[ps->size].addr);
		ps->size++;//增加
		printf("添加成功\n");
	
}
void showcontact(const struct contact* ps)
{
    //显示
	if (ps->size == 0)
	{
		printf("通讯录为空\n");
	}
	else
	{
		int i = 0;
		//标题
		printf("%-20s\t%-5s\t%-4s\t%-12s\t%-20s\n","姓名","性别","年龄","电话","地址");
		//数据
		for (i = 0; i < ps->size; i++)
		{
			printf("%-20s\t%-5s\t%-4d\t%-12s\t%-20s\n", ps->s1[i].name,ps->s1[i].sex,
				ps->s1[i].age, ps->s1[i].tele, ps->s1[i].addr);
		}
		printf("\n");
	}
}
static int findname(const struct contact* ps, char name[20])
//del、search、modify函数都要使用，static让findname函数只能在当前模块函数使用
{
	int i = 0;
	for (i = 0; i < ps->size; i++)
	{
		if (strcmp(ps->s1[i].name, name) == 0)
		{
			return i;
		}
	}
	return -1;//找不到
}
void delcontact( struct contact* ps)
{
	//联系人删除
	char name[20];
	printf("请输入要删除人的名字：");
	scanf("%s",name);
	int pos = findname(ps, name);
	//找到返回元素下标
	//找不到返回 -1
	if (pos == -1)
	{
		printf("要删除人的信息不存在\n");
	}
	else
	{
		//删除
		int j = 0;
		for (j = pos; j < ps->size - 1; j++)
		{
			ps->s1[j] = ps->s1[j + 1];//后面的放前面
		}
		ps->size--;
		printf("删除成功\n");
	}
}
void searchcontact(const struct contact* ps)
{
	//查找联系人
	char name[20];
	printf("请输入要查找人的信息：");
	scanf("%s",name);
	int pos = findname(ps, name);
	if (pos == -1)
	{
		printf("要查找的人不存在\n");
	}
	else//找到打印下标
	{
		//标题
		printf("%-20s\t%-5s\t%-4s\t%-12s\t%-20s\n", "姓名", "性别", "年龄", "电话", "地址");
		//数据
		printf("%-20s\t%-5s\t%-4d\t%-12s\t%-20s\n", ps->s1[pos].name, ps->s1[pos].sex,
				                    ps->s1[pos].age, ps->s1[pos].tele, ps->s1[pos].addr);
	}
}
void modifycontact(struct contact* ps)
{
	//修改联系人
	char name[20];
	printf("请输入要修改人的信息：");
	scanf("%s", name);
	int pos = findname(ps, name);
	if (pos == -1)
	{
		printf("要修改人的信息不存在\n");
	}
	else
	{
		printf("请输入姓名：");
		scanf("%s", ps->s1[pos].name);
		printf("请输入姓别：");
		scanf("%s", ps->s1[pos].sex);
		printf("请输入年龄：");
		scanf("%d", &ps->s1[pos].age);
		printf("请输入电话：");
		scanf("%s", ps->s1[pos].tele);
		printf("请输入地址：");
		scanf("%s", ps->s1[pos].addr);
		printf("修改成功\n");
	}
}
void destroy_memory(struct contact* ps)
{
   ferr(ps->s1);
   ps->s1=NULL;
}

//main.c主函数模块
#include "contast.h"
void menu()
{
	printf("         欢迎来到通讯录小程序         \n");
	printf("*************************************\n");
	printf("********1、add      2、del************\n");
	printf("********3、search   4、modify*********\n");
	printf("********5、show     0、exit***********\n");
	printf("**************************************\n");
	printf("**************************************\n");
	printf("**************************************\n");
}
int main()
{
	int input = 0;
	//创建通讯录
	struct contact con;//date指针和size、phonemax
	Initcontact(&con);
	do
	{
		menu();
		printf("请选择：");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			addcontact(&con);
			break;
		case 2:
			delcontact(&con);
			break;
		case 3:
			searchcontact(&con);
			break;
		case 4:
			modifycontact(&con);
			break;
		case 5:
			showcontact(&con);
			break;
		case 0:
            destroy_memory(&con);//释放内存
			printf("谢谢使用，已退出通讯录\n");
			break;
		default :
			printf("选择错误\n");
			break;
		}
	} while (input);
	return 0;
}